install.packages("rattle")
install.packages("rattle")
install.packages("rattle")
install.packages("rattle")
library("rattle")
rattle()
install.packages("rattle")
library("rattle")
library("rattle")
rattle()
rattle()
library("rattle")
rattle()
install.packages("rattle")
q()
library("rattle")
rattle()
install.packages("rattle")
library("rattle")
rattle()
install.packages("rattle", repos="http://rattle.togaware.com")
library("rattle")
rattle()
q()
install.packages("rattle", repos="http://rattle.togaware.com")
library("rattle")
rattle()
q()
setwd("D:/Others/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression/Polynomial_Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[2:3]
View(dataset)
lin_reg = lm( formula = Salary ~.,
data = dataset)
View(lin_reg)
View(lin_reg)
dataset$Level2 = dataset$Level^2
View(dataset)
View(dataset)
dataset$Level3 = dataset$Level^3
View(lin_reg)
View(lin_reg)
View(dataset)
View(dataset)
ploy_reg = lm( formula = Salary ~.,
data = dataset)
summary(ploy_reg)
library("ggplot2", lib.loc="~/R/win-library/3.4")
ggplot() +
geom_point(aes(x = dataset$Level,y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear regression)') +
xlab('Level')+
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level,y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(ploy_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Level')+
ylab('Salary')
y_pred = predict(lin_reg,6.5)
y_pred = predict(lin_reg,'6.5')
y_pred = predict(lin_reg,data.frame(Level = 6.5))
y_pred = predict(ploy_reg,data.frame(Level = 6.5),
data.frame(Level2 = 6.5^2),
data.frame(Level3 = 6.5^3),
data.frame(Level3 = 6.5^4))
View(dataset)
View(dataset)
y_pred = predict(ploy_reg,data.frame(Level = 6.5),
data.frame(Level2 = 6.5^2),
data.frame(Level3 = 6.5^3),
data.frame(Level3 = 6.5^4))
y_pred = predict(ploy_reg,data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
