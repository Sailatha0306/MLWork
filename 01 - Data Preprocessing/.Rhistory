install.packages("rattle")
install.packages("rattle")
install.packages("rattle")
install.packages("rattle")
library("rattle")
rattle()
install.packages("rattle")
library("rattle")
library("rattle")
rattle()
rattle()
library("rattle")
rattle()
install.packages("rattle")
q()
library("rattle")
rattle()
install.packages("rattle")
library("rattle")
rattle()
install.packages("rattle", repos="http://rattle.togaware.com")
library("rattle")
rattle()
q()
install.packages("rattle", repos="http://rattle.togaware.com")
library("rattle")
rattle()
q()
install.packages('caTools')
library("caTools", lib.loc="~/R/win-library/3.4")
detach("package:caTools", unload=TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv('Data.csv')
setwd("D:/Others/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
# Importing the dataset
dataset = read.csv('Data.csv')
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
# Feature Scaling
training_set = scale(training_set)
test_set = scale(test_set)
View(test_set)
View(training_set)
#taking cae of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x)mean(x,na.rm = TRUE)),
dataset$Salary)
#encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
View(test_set)
View(training_set)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
training_set = scale(training_set)
test_set = scale(test_set)
View(training_set)
View(training_set)
# Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Salary_Data.csv')
